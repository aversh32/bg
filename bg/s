{ _ready: false,
  _message_queue: [ '["var i = [vars],p=i[0],p1,r = \'\',o = this.o, l = this.l;this.c = {};r+=\'mimimi\';r+=(p[\'a\']==null?\'\':p[\'a\']);r+=(p[\'obj\'][\'b\']==null?\'\':p[\'obj\'][\'b\']);if((p[\'c\']==null?\'\':p[\'c\'])){r+=\'c\';}p[\'__a\']=0;if(p[\'arr\']!==void 0)p[\'__a\']=l(p[\'arr\']);if(p[\'__a\']>0){p[\'__c\']=0;p[\'__o\']=o(p[\'arr\']);for(var c in p[\'__o\'])if(p[\'__o\'].hasOwnProperty(c)){var v=p[\'__o\'][c];p[\'__c\']++;i.unshift(o(v));p=i[0];p1=i[1];p[\'__el\']={\'first\':p1[\'__c\']==1,\'last\':p1[\'__c\']==p1[\'__a\'],\'current\':p1[\'__c\'],\'count\':p1[\'__a\'],\'length\':p1[\'__a\'],\'key\':c,\'value\':v};r+=\'text\';r+=(p[\'__el\'][\'value\']==null?\'\':p[\'__el\'][\'value\']);delete p.__el;delete p.__a;delete p.__c;delete p.__o;i.shift();p=i[0];p1=i[1];}}return r;",{"c":2,"obj":1,"arr":[1,2,3]},0]' ],
  options: 
   { timeout: 500,
     node: 'node',
     shovel: '/home/zvm/bg/bg-new/node_modules/sandbox/lib/shovel.js' },
  info: 
   { name: 'sandbox',
     description: 'A nifty javascript sandbox for node.js',
     homepage: 'http://gf3.github.com/sandbox/',
     author: 
      { name: 'Gianni Chiappetta',
        email: 'gianni@runlevel6.org',
        url: 'http://gf3.ca' },
     bugs: { url: 'https://github.com/gf3/sandbox/issues' },
     contributors: [ [Object], [Object] ],
     version: '0.8.6',
     main: './lib/sandbox',
     directories: { lib: './lib' },
     engines: [ 'node >=0.5.0' ],
     devDependencies: { mocha: '1.20.1', should: '0.6.3', sinon: '~1.10.2' },
     repository: { type: 'git', url: 'https://gf3@github.com/gf3/sandbox.git' },
     scripts: { test: 'mocha' },
     license: 
      { type: 'Public Domain',
        url: 'http://github.com/gf3/sandbox/raw/master/UNLICENSE' },
     gitHead: 'f92af02afd614ef93c8c347c3787339ee3a565d4',
     _id: 'sandbox@0.8.6',
     _shasum: 'd169f18513604e327c9bf1cc39881b0bec4ed7b6',
     _from: 'sandbox@*',
     _npmVersion: '1.4.16',
     _npmUser: { name: 'gf3', email: 'gianni@runlevel6.org' },
     maintainers: [ [Object] ],
     dist: 
      { shasum: 'd169f18513604e327c9bf1cc39881b0bec4ed7b6',
        tarball: 'http://registry.npmjs.org/sandbox/-/sandbox-0.8.6.tgz' },
     _resolved: 'https://registry.npmjs.org/sandbox/-/sandbox-0.8.6.tgz',
     readme: 'ERROR: No README data found!' },
  child: 
   { domain: null,
     _events: 
      { internalMessage: [Function],
        message: [Function],
        exit: [Function] },
     _maxListeners: 10,
     _closesNeeded: 4,
     _closesGot: 0,
     connected: true,
     signalCode: null,
     exitCode: null,
     killed: false,
     _handle: { owner: [Circular], onexit: [Function], pid: 19143 },
     pid: 19143,
     stdin: 
      { _connecting: false,
        _handle: null,
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        onend: null,
        destroyed: true,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 875,
        _pendingData: null,
        _pendingEncoding: '',
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     stdout: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        pipe: [Function],
        addListener: [Function],
        on: [Function],
        pause: [Function],
        resume: [Function],
        read: [Function],
        _consuming: true },
     stderr: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '' },
     stdio: [ [Object], [Object], [Object], null ],
     _channel: 
      { fd: 17,
        writeQueueSize: 0,
        buffering: false,
        onread: [Function],
        sockets: [Object] },
     _handleQueue: null,
     send: [Function],
     disconnect: [Function] },
  _events: { message: [Function] } }
{ result: '\'SyntaxError: Unexpected identifier\'',
  console: [] }
